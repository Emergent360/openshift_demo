---
- name: set build path
  set_fact:
    openshift_build_path: "/home/ec2-user/openshift-{{ cluster_name }}/build"

- name: Get default ingress controller
  k8s_info:
    api_version: v1
    kind: IngressController
    name: default
    namespace: openshift-ingress-operator
    kubeconfig: "{{ openshift_build_path }}/auth/kubeconfig"
  register: le_wildcard
  ignore_errors: yes


- name: set letsencrypt facts
  set_fact:
    le_wildcard: "*.{{le_wildcard.resources[0].status.domain}}"
    le_api: "{{ le_wildcard.resources[0].status.domain | regex_replace('^apps\\.', 'api.') }}"
    le_secret_name: "le-certs-{{ ansible_date_time.date }}"
    le_domain: "openshift-{{ cluster_name }}"

- name: certbot to request cert for apps
  shell: >
    certbot certonly
    --dns-route53
    -d "{{ le_wildcard }}"
    --email dpullman@emergent360.com
    --noninteractive
    --agree-tos
  
- name: certbot to request cert for api
  shell: >
    certbot certonly
    --dns-route53
    -d "{{ le_api }}"
    --email dpullman@emergent360.com
    --noninteractive
    --agree-tos

- name: check for an existing api-secret object
  k8s_info:
    api_version: v1
    kind: secret
    name: api-secret
    namespace: openshift-config
    kubeconfig: "{{ openshift_build_path }}/auth/kubeconfig"
  register: api_secret_check

- name: create api cert secret
  shell: >
    export KUBECONFIG="{{ openshift_build_path }}/auth/kubeconfig";
    "{{openshift_build_path }}/oc"
    create
    secret
    tls
    api-secret
    --cert=/home/ec2-user/.certbot/config/live/api."{{ le_domain }}".lab-emergent360.com/fullchain.pem
    --key=/home/ec2-user/.certbot/config/live/api."{{ le_domain }}".lab-emergent360.com/privkey.pem
    -n openshift-config
  when: api_secret_check.resources | length == 0

- name: patch api server to use cert
  k8s:
    state: present
    definition:
      api_version: config.openshift.io/v1
      kind: APIServer
      metadata:
        name: cluster
      spec:
        servingCerts:
          namedCertificates:
          - names:
            - "{{ le_api }}"
            servingCertificate:
              name: api-secret
    kubeconfig: "{{ openshift_build_path }}/auth/kubeconfig"
  ignore_errors: yes

- name: backup the kubeconfig file
  copy:
    src: "{{ openshift_build_path }}/auth/kubeconfig"
    remote_src: yes
    dest: "{{ openshift_build_path }}/auth/kubeconfig.bak"

- name: create updated kubeconfig
  script:
    cmd: update_kubeconfig.sh "{{ le_domain }}" "{{ openshift_build_path }}"
    chdir: "{{ openshift_build_path }}"

- name: create certbot config map
  shell: >
    export KUBECONFIG="{{ openshift_build_path }}/auth/kubeconfig";
    "{{openshift_build_path }}/oc"
    create
    configmap
    certbot-ca
    --from-file=ca-bundle.crt=/home/ec2-user/.certbot/config/archive/apps.${LE_DOMAIN}.lab-emergent360.com/chain1.pem
    -n openshift-config
  when: apps_secret_check.resources | length == 0

- name: patch proxy
  shell: >
    export KUBECONFIG="{{ openshift_build_path }}/auth/kubeconfig";
    "{{openshift_build_path }}/oc"
    patch proxy/cluster
    --type=merge
    --patch='{"spec":{"trustedCA":{"name":"certbot-ca"}}}'

- name: check for an existing apps-secret object
  k8s_info:
    api_version: v1
    kind: secret
    name: apps-secret
    namespace: openshift-ingress
    kubeconfig: "{{ openshift_build_path }}/auth/kubeconfig"
  register: apps_secret_check

- name: create apps cert secret
  shell: >
    export KUBECONFIG="{{ openshift_build_path }}/auth/kubeconfig";
    "{{openshift_build_path }}/oc"
    create
    secret
    tls
    apps-secret
    --cert=/home/ec2-user/.certbot/config/live/apps."{{ le_domain }}".lab-emergent360.com/fullchain.pem
    --key=/home/ec2-user/.certbot/config/live/apps."{{ le_domain }}".lab-emergent360.com/privkey.pem
    -n openshift-ingress
  when: apps_secret_check.resources | length == 0


- name: patch ingress
  shell: >
    export KUBECONFIG="{{ openshift_build_path }}/auth/kubeconfig";
    "{{openshift_build_path }}/oc"
    patch ingresscontroller.operator default
    --type=merge 
    -p '{"spec":{"defaultCertificate": {"name": "apps-secret"}}}'
    -n openshift-ingress-operator
